<?xml version="1.0" encoding="utf-8"?>

<root xmlns:android="http://schemas.android.com/apk/res/android">

	<!-- Enable log output when creating APKs -->
	<trace enable="true"/>
	<dumpvars/>

	<init>
		<!-- Output log when creating APK -->
		<log text="MobileSoundTest init"/>
	</init>

    <androidManifestUpdates>
        <addElements tag="application">
            <receiver android:name="com.epicgames.unreal.AudioVolumeReceiver" android:exported="true" />
        </addElements>
    </androidManifestUpdates>
    
	<!-- optional additions to proguard -->
	<proguardAdditions>
		<insert>
            -keepclassmembers public class com.epicgames.ue4.GameActivity{
            *;
            }
            -keep class com.epicgames.unreal.AudioVolumeReceiver{
            *;
            }
        </insert>
	</proguardAdditions>

    <!-- optional files or directories to copy to Intermediate/Android/APK -->
    <resourceCopies>
        <copyDir src="$S(ProjectDir)/Source/MobileSoundTest/ThirdParty/Android/Java" dst="$S(BuildDir)" />
    </resourceCopies>
    
	<!-- optional additions to the GameActivity imports in GameActivity.java -->
	<gameActivityImportAdditions>
		<insert>
            import android.media.AudioDeviceInfo;
            import com.epicgames.unreal.AudioVolumeReceiver;
        </insert>
	</gameActivityImportAdditions>
		
	<!-- optional additions to the GameActivity class in GameActivity.java -->
	<gameActivityClassAdditions>
		<insert>
            //外部音声出力デバイスが接続されているかどうか
            boolean AndroidThunkJava_GetIsExternalAudioDevicesConnected()
            {
            AudioManager audio = (AudioManager)getSystemService( Context.AUDIO_SERVICE);
            AudioDeviceInfo[] devices = audio.getDevices(AudioManager.GET_DEVICES_OUTPUTS);
            for (AudioDeviceInfo device : devices) {
            if (device.isSink()) { // 出力デバイスのみを確認
            if (device.getType() == AudioDeviceInfo.TYPE_WIRED_HEADPHONES ||
            device.getType() == AudioDeviceInfo.TYPE_WIRED_HEADSET ||
            device.getType() == AudioDeviceInfo.TYPE_BLUETOOTH_A2DP||
            device.getType() == AudioDeviceInfo.TYPE_HDMI||
            device.getType() == AudioDeviceInfo.TYPE_USB_HEADSET
            )
            {
            return true;
            }
            }
            }
            return false;
            };

            //サイレントモードかどうか取得
            boolean AndroidThunkJava_GetIsSilentMode()
            {
            AudioManager audio = (AudioManager)getSystemService( Context.AUDIO_SERVICE);
            int RingerMode = audio.getRingerMode();
            if(RingerMode == AudioManager.RINGER_MODE_NORMAL)
            {
            return false;
            }
            return true;
            }

            //音量変更時のタイミングを取得するReceiverを有効にする
            public void AndroidThunkJava_EnableAudioVolumeReceiver(boolean IsEnabled)
            {
            if(IsEnabled)
            {
            AudioVolumeReceiver.startReceiver(this);
            }else
            {
            AudioVolumeReceiver.stopReceiver(this);
            }
            }
        </insert>
	</gameActivityClassAdditions>
</root>